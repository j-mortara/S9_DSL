package ArduinoML.textGen;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;

public abstract class AppHelper {
  public static void yaml_configuration(SNode app, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("/** Yaml configuration file");
    tgs.newLine();
    tgs.append("sensors:");
    tgs.newLine();

    ListSequence.fromList(SLinkOperations.getChildren(app, MetaAdapterFactory.getContainmentLink(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x36166a13252ed0cL, 0x4004dad9fa8c3de5L, "watches"))).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {

        ctx.getBuffer().area().increaseIndent();
        tgs.indent();
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x4004dad9fa875ee0L, 0x4004dad9faa17f22L, "sensor")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
        tgs.append(":");
        tgs.newLine();
        ctx.getBuffer().area().increaseIndent();
        tgs.indent();
        tgs.append("axis_label: \"");
        tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x4004dad9fa875ee0L, 0x4004dad9faa17f22L, "sensor")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
        tgs.append("\"");
        tgs.newLine();
        ctx.getBuffer().area().decreaseIndent();
        ctx.getBuffer().area().increaseIndent();
        tgs.indent();
        tgs.append("min_value : 0");
        tgs.newLine();
        ctx.getBuffer().area().decreaseIndent();
        ctx.getBuffer().area().increaseIndent();
        tgs.indent();
        if (SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConcept(SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x4004dad9fa875ee0L, 0x4004dad9faa17f22L, "sensor")))), MetaAdapterFactory.getConcept(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x631acfca1ce21c26L, "ArduinoML.structure.DigitalSensor"))) {
          tgs.append("max_value: 1");
          tgs.newLine();
        } else {
          tgs.append("max_value: 1023");
          tgs.newLine();
        }
        ctx.getBuffer().area().decreaseIndent();
        ctx.getBuffer().area().increaseIndent();
        tgs.indent();
        tgs.append("max_displayed_values: 30");
        tgs.newLine();
        ctx.getBuffer().area().decreaseIndent();
        ctx.getBuffer().area().decreaseIndent();
      }
    });
    tgs.newLine();
    ListSequence.fromList(SLinkOperations.getChildren(app, MetaAdapterFactory.getContainmentLink(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x36166a13252ed0cL, 0x601b82c1a3a75832L, "parameters"))).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        tgs.indent();
        tgs.appendNode(it);
        tgs.newLine();
        tgs.newLine();
      }
    });
    if (ListSequence.fromList(SLinkOperations.getChildren(app, MetaAdapterFactory.getContainmentLink(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x36166a13252ed0cL, 0x601b82c1a3a75832L, "parameters"))).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x601b82c1a3a75680L, 0x601b82c1a3a7581cL, "parameter")) == "display_mode";
      }
    }) == null) {
      tgs.append("display_mode");
      tgs.append(": false");
      tgs.newLine();
      tgs.newLine();
    }
    if (ListSequence.fromList(SLinkOperations.getChildren(app, MetaAdapterFactory.getContainmentLink(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x36166a13252ed0cL, 0x601b82c1a3a75832L, "parameters"))).findFirst(new IWhereFilter<SNode>() {
      public boolean accept(SNode it) {
        return SPropertyOperations.getString(it, MetaAdapterFactory.getProperty(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x601b82c1a3a75680L, 0x601b82c1a3a7581cL, "parameter")) == "display_state";
      }
    }) == null) {
      tgs.append("display_state");
      tgs.append(": false");
      tgs.newLine();
      tgs.newLine();
    }
    tgs.indent();
    tgs.append("**/");
  }
  public static void watch_function(SNode app, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("void watch(String state, String mode)");
    tgs.newLine();
    tgs.append("{");
    tgs.newLine();
    tgs.indent();
    ctx.getBuffer().area().increaseIndent();
    tgs.indent();
    tgs.append("String str = \"{\\\"timestamp\\\":\"+String(millis())+\",\";");
    tgs.newLine();
    ListSequence.fromList(SLinkOperations.getChildren(app, MetaAdapterFactory.getContainmentLink(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x36166a13252ed0cL, 0x4004dad9fa8c3de5L, "watches"))).visitAll(new IVisitor<SNode>() {
      public void visit(SNode it) {
        tgs.indent();
        tgs.append("str.concat(");
        tgs.appendNode(it);
        tgs.append("+\",\");");
        tgs.newLine();
      }
    });
    tgs.indent();
    tgs.append("str.concat(\"\\\"state\\\":\\\"\"+state+\"\\\",\\\"mode\\\":\\\"\"+mode+\"\\\"\");");
    tgs.newLine();
    tgs.indent();
    tgs.append("str.concat(\"}\");");
    tgs.newLine();
    tgs.indent();
    tgs.append("Serial.println(str);");
    tgs.newLine();
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("}");
    tgs.newLine();
    tgs.newLine();
    tgs.append("void loop(void)");
    tgs.newLine();
    tgs.append("{");
    tgs.newLine();
    ctx.getBuffer().area().increaseIndent();
    tgs.indent();
    tgs.append("state_");
    tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(app, MetaAdapterFactory.getReferenceLink(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x36166a13252ed0cL, 0x353626c37b53cd9bL, "initialMode")), MetaAdapterFactory.getReferenceLink(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x140fe9644f06a52cL, 0x140fe9644f11e534L, "initialState")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
    tgs.append("_mode_");
    tgs.append(SPropertyOperations.getString(SLinkOperations.getTarget(app, MetaAdapterFactory.getReferenceLink(0x8a1177a2191f4d85L, 0xb39864536e65e675L, 0x36166a13252ed0cL, 0x353626c37b53cd9bL, "initialMode")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name")));
    tgs.append("();");
    tgs.newLine();
    ctx.getBuffer().area().decreaseIndent();
    tgs.append("}");
  }
}
